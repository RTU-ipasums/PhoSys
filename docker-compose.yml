version: '3.7'

services:

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - cache
    entrypoint: ['/usr/src/app/entrypoint.sh']
    ports:
      - 5001:5000
    environment:
      - FLASK_ENV=production
    networks:
      - api_bridge
    restart: always

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    volumes:
#      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - backend
    networks:
      - api_bridge
    ports:
      - "8800:80"
      - "4433:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    networks:
      - api_bridge
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  cache:
    image: redis:6.2-alpine
    restart: always
    networks:
      - api_bridge
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - cache:/data

##### Networks #####
networks:
  api_bridge:
    driver: bridge

##### Volumes #####
volumes:
  cache:
    driver: local